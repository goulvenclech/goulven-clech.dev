---
// @ts-ignore - Please EleventyFetch type your shit 🙏
import EleventyFetch from "@11ty/eleventy-fetch"
import Block from "./Block.astro"

/**
 * Used to present a Google Maps Place as a card, also a link to that place.
 * @param {any} id - What's this exciting place's id?
 */
interface Props {
	id: string
}

const { id } = Astro.props

/**
 * Await fetch function, to the Google Maps Api, using our Maps token stored in ~/.env (secret file)
 * TO DO : handle errors !
 */
const placeData: any = EleventyFetch(
	`https://maps.googleapis.com/maps/api/place/details/json?place_id=${id}&key=${
		import.meta.env.MAPS_TOKEN
	}`,
	{
		duration: "1d",
		type: "json",
	}
)

// Got what what we needed 💰 See response format ->
// https://developers.google.com/maps/documentation/places/web-service/details
const { result: place } = await placeData

/**
 * From an array of opened days numbers, return a string with closed days.
 */
function getClosedDays(periods: any): string {
	// Every day of the week is represented by a number from 0 to 6, Sunday being 0.
	// Get the opened days numbers from the API response.
	let openedDays = periods.map((period: any) => period.open.day)
	// By default, all days are closed...
	let closedDays = [0, 1, 2, 3, 4, 5, 6]
		// ...then we filters out the ones that are opened.
		.filter((dayNumber) => !openedDays.includes(dayNumber))
		// ...and we convert the remaining numbers to strings.
		.map((x) => dayOfWeekAsString(x))
		// ...and we join them with a comma to form the final string.
		.join(", ")
	// If no days are closed, we return a string saying the place is open everyday.
	if (closedDays === "") return "Open everyday."
	// Else return the final string.
	return `Closed on ${closedDays}.`
}

/**
 * Converts a day number (see above) to a string.
 *
 * @param {Number} dayIndex
 * @return {String} Returns day as string
 */
function dayOfWeekAsString(dayIndex: number): string {
	return (
		["sunday", "monday", "tuesday", "wednesday", "thursday", "friday", "saturday"][dayIndex] || ""
	)
}
---

<Block
	image={`https://maps.googleapis.com/maps/api/place/photo?maxheight=500&photo_reference=${
		place.photos[0].photo_reference
	}&key=${import.meta.env.MAPS_TOKEN}`}
	to={place.url}
>
	<h3 id={place.name} class="my-0 line-clamp-2 text-ellipsis leading-8 sm:line-clamp-1">
		{place.name}
	</h3>
	<ul class="flex flex-col">
		<li class="line-clamp-2 text-ellipsis sm:line-clamp-1">
			{place.vicinity}
		</li>
		<li>
			{
				place.opening_hours && place.opening_hours.periods
					? getClosedDays(place.opening_hours.periods)
					: "No opening hours available."
			}
		</li>
		<li>
			{[...Array(Math.round(place.rating))].map(() => <i class="fas fa-star text-xs" />)} ({
				place.user_ratings_total
			} reviews)
		</li>
	</ul>
</Block>
