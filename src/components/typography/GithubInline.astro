---
// @ts-ignore - Please EleventyFetch type your shit 🙏
import EleventyFetch from "@11ty/eleventy-fetch"
import { getImage, Image } from "astro:assets"
/**
 * Take a Github User ID, and render a link to this user account, with their avatar and name.
 * @param {string} user - What is the user's GitHub ID?
 */
interface Props {
	user: string
}

const { user } = Astro.props

/**
 * Await fetch function, to the public GitHub Api, using our fine grained GitHub personal
 * token stored in ~/.env (secret file)
 * See -> https://docs.github.com/en/rest/overview/other-authentication-methods#via-personal-access-tokens
 */
const userData: any = EleventyFetch(`https://api.github.com/user/${user}`, {
	duration: "1d",
	type: "json",
	headers: {
		Authorization: "Bearer " + import.meta.env.GITHUB_TOKEN,
	},
})

// Got what what we needed 💰 See response format ->
// https://docs.github.com/en/rest/users/users#get-a-user
const { name: userName, avatar_url: avatarUrl, html_url: userUrl } = await userData

// Optimize image size and quality
const avatarImg = await getImage({
	src: avatarUrl,
	width: 24 * 2, // Displayed at 24px multiplied by the density
	height: 24 * 2,
})
---

{
	userName ? (
		<a
			href={userUrl}
			class="github-inline whitespace-nowrap text-font-light before:content-none hover:text-primary dark:text-font-dark dark:hover:text-primary"
		>
			<Image
				src={avatarImg.src}
				width={24}
				height={24}
				alt="..."
				class="mr-1 inline rounded-full"
			/>
			{userName}
		</a>
	) : (
		<span class="text-font-light">Error</span>
	)
}
<style>
	/* Remove link symbol, set by base.css */
	.github-inline::before {
		content: "";
	}
</style>
