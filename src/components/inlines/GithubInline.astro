---
// @ts-ignore - Please EleventyFetch type your shit 🙏
import EleventyFetch from "@11ty/eleventy-fetch"
import { Image } from "astro:assets"
/**
 * Take a Github User ID, and render a link to this user account, with their avatar and name.
 * @param {string} user - What is the user's GitHub ID?
 */
interface Props {
  user: string
}

const { user } = Astro.props

/**
 * Await fetch function, to the public GitHub Api, using our fine grained GitHub personal
 * token stored in ~/.env (secret file)
 * See -> https://docs.github.com/en/rest/overview/other-authentication-methods#via-personal-access-tokens
 */
const userData: any = EleventyFetch(`https://api.github.com/user/${user}`, {
  duration: "1d",
  type: "json",
  headers: {
    Authorization: "Bearer " + import.meta.env.GITHUB_TOKEN,
  },
})

// Got what what we needed 💰 See response format ->
// https://docs.github.com/en/rest/users/users#get-a-user
const { name: userName, avatar_url: avatarUrl, html_url: userUrl } = await userData
---

{
  userName ? (
    <a
      href={userUrl}
      class="not-prose dark:text-accent-dark text-accent-light whitespace-nowrap font-bold hover:text-primary dark:hover:text-primary"
    >
      <Image
        src={avatarUrl}
        width={24}
        height={24}
        alt="..."
        class="not-prose mr-1 inline rounded-full"
      />
      {userName}
    </a>
  ) : (
    <span class="not-prose text-accent-light font-bold">Error</span>
  )
}
