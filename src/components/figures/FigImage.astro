---
import { Picture as AstroPicture, getConfiguredImageService, getImage } from "astro:assets"
import type { LocalImageServiceWithPlaceholder } from "src/imageService"
/**
 * ⚠️ Warning for beginners ⚠️
 * What you're about to read here is an overly complicated and far-fetched way of
 * displaying images with Astro. Mainly to gain performance and to display a
 * placeholder during image loading.
 * You should rather use the default utils for images :
 * -> https://docs.astro.build/en/guides/images/
 * If you want to understand this component, you'll need to look at :
 * -> src/imageService.ts
 */
const imageService = (await getConfiguredImageService()) as LocalImageServiceWithPlaceholder
const placeholderURL = await imageService.generatePlaceholder(
	Astro.props.src.src,
	Astro.props.src.width,
	Astro.props.src.height
)
const goodQualityURL = await getImage({
	src: Astro.props.src,
})

// eslint-disable-next-line @typescript-eslint/no-explicit-any
const { caption, source, ...props } = Astro.props as any
---

<figure class="my-6">
	<AstroPicture
		{...props}
		data-zoomable
		data-zoom-src={goodQualityURL}
		width={Astro.props.src.width / 2}
		densities={Astro.props.densities ?? [1.5, 2]}
		formats={Astro.props.formats ?? ["webp"]}
		class="w-full overflow-hidden rounded"
		style={`background-size: cover;background-image: url(${placeholderURL});image-rendering:auto;`}
		onload="this.style.backgroundSize = null; this.style.backgroundImage = null; this.style.imageRendering = null; this.removeAttribute('onload');"
	/>
	<figcaption class="mx-4 my-2 text-center text-xs italic sm:text-sm">
		{caption}
		{source && <a href={source}> Source</a>}
	</figcaption>
</figure>
